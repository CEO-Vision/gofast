<?php

/**
 * @file
 * Defines the functionality for history_js's requirements and
 * uninstall process(es).
 */

/**
 * Implements hook_requirements().
 */
function history_js_requirements($phase) {
  $requirements = array();
  $t = get_t();

  switch ($phase) {
    case 'runtime':
      $problems = array();

      // If the libray folder was not found the library is not installed properly.
      module_load_include('module', 'libraries');
      $libpath = libraries_get_path('balupton-history.js');
      if (is_dir($libpath) != TRUE) {
        $readme_url = url( drupal_get_path('module', 'history_js') . '/README.txt');
        $problems[] = $t('The History.js library folder was not found. Please see <a href="@url">README.txt</a> in the history_js module directory for proper library installation details.', array('@url' => $readme_url));
      }

      // See if any loaded modules with libraries have jquery.bbq as a dependancy.
      $modules = module_list();
      $conflicts = array();
      foreach ( $modules as $module ) {
        // If the module invokes hook_library
        if (module_hook($module, 'library')) {
          $libraries = module_invoke($module, 'library');
          foreach ( (array) $libraries as $library ) {
            if (isset($library['dependencies'])) {
              foreach ( $library['dependencies'] as $dependency ) {
                // this module implements bbq as a dependency
                if ($dependency[1] == 'jquery.bbq') {
                  $conflicts[] = $module;
                  // Move on to the next module.
                  break 3;
                }
              }
            }
          }
        }
      }

      // If conflicts were detected, build a list of them for the user.
      if (!empty($conflicts)) {
        if (count($conflicts) > 1) {
          $problems[] = $t('The following modules implement the jQuery BBQ library and are incomaptible with History.js: @list. In order to use History.js, please reconfigure or disable them.', array('@list' => implode(", ", $conflicts)));
        }
        else{
          $problems[] = $t('The @conflicting module implements the jQuery BBQ library and is incompatible with History.js. In order to use History.js, please reconfigure or disable it.', array('@conflicting' => $conflicts[0]));
        }
      }

      // Display the problems to the user.
      if (!empty($problems)) {
        if (count($problems) > 1) {
          $description = theme_item_list(array('items' => $problems, 'title' => NULL, 'type' => 'ul', 'attributes' => array()));
        }
        else{
          $description = $problems[0];
        }

        $requirements['history_js'] = array(
              'title' => $t('History.js'),
              'description' => $description,
              'severity' => REQUIREMENT_ERROR,
              'value' => NULL
        );
      }
      break;
  }
  return $requirements;
}

/**
 * Implements hook_uninstall().
 */
function history_js_uninstall() {
  variable_del('history_js_compatibility');
  variable_del('history_js_implementation');
}
