<?php

define('TEMP_PASSWORD_ADM_USER', variable_get('temp_password_adm_user', FALSE));
define('AWS_INSTANCE', variable_get('instance_number_AWS',""));
define('IS_AWS_INSTANCE', empty(variable_get('instance_number_AWS', "") ? FALSE : TRUE));

/************************************************/
/******************  HOOKS **********************/
/************************************************/
function gofast_graphic_config_init(){
  module_load_include('inc', 'gofast', 'gofast.admin'); // Get "gofast_admin_smtp_settings_form" function
  module_load_include('inc', 'gofast', 'gofast.drush'); // Get "drush_gofast_flush_advagg" function
  variable_set('instance_number_AWS', @file_get_contents('http://instance-data/latest/meta-data/instance-id'));
}


/**
 * Implement HOOK_post_install_alter called in drush_gofast_post_install()
 *
 * @param $modules: all modules with a HOOK_post_install
 * @return $modules
 */
function gofast_graphic_config_post_install_alter($modules){

  // Remove gofast_og_post_install for GoFAST Community called in gofast_graphic_config_frame_submit()
  foreach($modules as $key => $module){
    if($module == "gofast_og"){
      array_splice($modules,$key,$key);
    }
  }
  return $modules;

}

function gofast_graphic_config_page_alter($page){

  if(IS_AWS_INSTANCE){
    $firstCo = variable_get('firstconnection');
    if ($firstCo != TRUE && current_path() != "Access_config"){
      if (variable_get('IS_ACCESS') == FALSE){
        header('Location: /Access_config');
      }else{
        if(current_path() != 'Welcome'){
          header('Location: /Welcome');
        }
      }
    }
  }else{
    $firstCo = variable_get('firstconnection');
    if ($firstCo != TRUE && current_path() != "Welcome") {
      header('Location: /Welcome');
    }
  }
}

function gofast_graphic_config_preprocess_page(&$variables){
  global $user;

  // If the user just switched language, propose him to save changes as a
  // profile preference.

  $firstCo = variable_get('firstconnection');
  if($firstCo != TRUE && current_path() != "Welcome"){
    unset($_SESSION['messages']);
  }
}


function gofast_graphic_config_menu() {
  $items = array();
    $items['Access_config'] = array(
      'title' => t('Access configuration page', array(), array('context' => 'gofast_graphic_config' )),
      'page callback' => 'gofast_access_config_page',
      'access callback' => TRUE,
      'type' => MENU_NORMAL_ITEM,
    );
  $items['Welcome'] = array(
    'title' => t('Graphic configuration of the page', array(), array('context' => 'gofast_graphic_config' )),
    'page callback' => 'gofast_graphic_config_page',
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
  );
  $items['validateDomainName'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'gofast_graphic_config_frame_validate_domain',
    'access arguments' => array(TRUE),
    'access callback' => TRUE,
  );
  $items['validateSSLCertificate'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'gofast_graphic_config_frame_validate_sslcertificate',
    'access arguments' => array(TRUE),
    'access callback' => TRUE,
  );
  $items['validateSMTPServer'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'gofast_graphic_config_frame_validate_smtp_server',
    'access arguments' => array(TRUE),
    'access callback' => TRUE,
  );
  $items['validateADMUser'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'gofast_graphic_config_frame_validate_adm_user',
    'access arguments' => array(TRUE),
    'access callback' => TRUE,
  );

  return $items;
}

function gofast_graphic_config_theme($existing, $type, $theme, $path) {
  $items = array();
  if (IS_AWS_INSTANCE) {
    $items['gofast_access_config_global_theme'] = array(
      'render element' => 'template',
      'template' => 'tpl/gofast_access_config_global_theme',
    );
  }
  $items['gofast_graphic_config_global_theme'] = array(
    'render element' => 'template',
    'template' => 'tpl/graphic_config_global',
  );
  $items['gofast_graphic_config_smtp_config_mail_theme'] = array(
    'template' => 'tpl/gofast_graphic_config_smtp_config_mail',
  );
  return $items;
}


function gofast_access_config_page(){
 // If the plateform have been configure , access denied
 if (variable_get('IS_CONFIGURE',FALSE)){
     drupal_access_denied();
     exit;
 }

 drupal_add_css(drupal_get_path('module', 'gofast_graphic_config') . "/css/gofast_graphic_config.css");
 drupal_add_js(drupal_get_path('module', 'gofast_graphic_config') . "/js/gofast_graphic_config.js");

 $page = theme("gofast_access_config_global_theme");
 return $page;
}


function gofast_graphic_config_page(){

  // If the plateform have been configure , access denied
  if (variable_get('IS_CONFIGURE',FALSE)){
      drupal_access_denied();
      exit;
  }
  // if (IS_AWS_INSTANCE) {
  //   if (variable_get(('IS_ACCESS'), FALSE)){
  //       drupal_access_denied();
  //       exit;
  //   }
  // }

  drupal_add_css(drupal_get_path('module', 'gofast_graphic_config') . "/css/gofast_graphic_config.css");
  drupal_add_js(drupal_get_path('module', 'gofast_graphic_config') . "/js/gofast_graphic_config.js");

  $page .= theme("gofast_graphic_config_global_theme");
  return $page;
}

/************************************************/
/******************* FORMS **********************/
/************************************************/
function gofast_graphic_config_frame(){
$form = array();

  $form['vt'] = array(
    '#type' => 'vertical_tabs', // in fact js make horizontal-tabs
  );
  $form['domainName'] = array(
    '#title' => t('Change Domain Name', array(), array('context' => 'gofast_graphic_config' )),
    '#description' => t('You are about to change your domain name.<b> Warning, the following informations must be the same as your SSL certificate.</b>', array(), array('context' => 'gofast_graphic_config' )),
    '#type' => 'fieldset',
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
    '#group' => 'vt',
    '#id' => 'domainName',
  );
  $form['sslCertificate'] = array(
    '#title' => t('Configure SSL Certificate', array(), array('context' => 'gofast_graphic_config' )),
    '#description' => t('You are about to configure your SSL certificate, you can create or upload one. This is to secure communications between the web server and the browser.' , array(), array('context' => 'gofast_graphic_config' )),
    '#type' => 'fieldset',
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
    '#group' => 'vt',
    '#id' => 'sslCertificate',
  );
  $form['smtp'] = array(
    '#title' => t('Configure SMTP Server', array(), array('context' => 'gofast_graphic_config' )),
    '#type' => 'fieldset',
    '#description' => t('This step allows you to configure your SMTP server. With you can receive notifications on the platform like user creation or sharing document.', array(), array('context' => 'gofast_graphic_config' )),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
    '#group' => 'vt',
    '#id' => 'smtp',
  );
  $form['userAdm'] = array(
    '#title' => t('Create Admin User', array('context' => 'gofast_graphic_config' )),
    '#type' => 'fieldset',
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
    '#group' => 'vt',
    '#id' => 'userAdm',
  );
  $form['end'] = array(
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
    '#title' => t('Finish Configuration', array('context' => 'gofast_graphic_config' )),
    '#type' => 'fieldset',
    '#group' => 'vt',
    '#id' => 'end',
  );
  return $form;
}

function gofast_graphic_config_domainname(&$form, &$form_state){
  $form['domainName']['newSubdomain'] = array(
    '#type' => 'textfield',
    '#title' => t('New sub-domain *', array(), array('context' => 'gofast_graphic_config')),
    '#attributes' => array('placeholder' => array('ex: gofast-community')),
    '#maxlength' => 64,
    '#id' => 'fieldSubDomain',
  );
  $form['domainName']['newdomain'] = array(
    '#type' => 'textfield',
    '#title' => t('New domain *', array(), array('context' => 'gofast_graphic_config')),
    '#attributes' => array('placeholder' => array('ex: ceo-vision')),
    '#maxlength' => 64,
    '#id' => 'fieldDomain',
);
  $form['domainName']['newextention'] = array(
    '#type' => 'textfield',
    '#title' => t('New extention *', array(), array('context' => 'gofast_graphic_config')),
    '#attributes' => array('placeholder' => array('ex: com')),
    '#maxlength' => 64,
    '#id' => 'fieldExtention',
  );
  $form['domainName']['aboutmobile'] = array(
    '#markup' => '<h3 style = "margin-top:20px;">' . t('About Mobile URL',array(), array('context' => 'gofast_graphic_config')) . '</h3>',
  );

  $form['domainName']['mobile'] = array(
    '#markup' => '<p style = "margin-top:20px;">' . t('You can modify the mobile url in the configuration interface of the gofast: by default it\'s "m-gf-mobile". You have to think about DNS server bind.') . '</p>',
  );
  $form['domainName']['validateDomainNameAndnext'] = array(
    '#type' => 'submit',
    '#value' => t('Next', array(), array('context' => 'gofast_graphic_config'))." >>",
    '#attributes' => array('class' => array('btn-primary')), // for the style
    '#id' => 'validateDomainNameAndNext',
    '#prefix' => '<div style="float: right;">',
    '#suffix' => '</div>',
  );
}

function gofast_graphic_config_SSL(&$form, &$form_state){
  $form['sslCertificate']['optionOne'] = array(
    '#title' => t('Use your SSL Certificate', array(), array('context' => 'gofast_graphic_config' )),
    '#description' => t('You can upload here your certificate files.', array(), array('context' => 'gofast_graphic_config' )),
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#id' => 'sslCertificateOptionOne'
  );
  $form['sslCertificate']['optionOne']['SSLPrivateKeyFile'] = array(
    '#type' => 'file',
    '#title' => t('Private Key *', array(), array('context' => 'gofast_graphic_config' )),
    '#id' => 'fieldPrivateKey',
  );
  $form['sslCertificate']['optionOne']['SSLPublicKeyFile'] = array(
    '#type' => 'file',
    '#title' => t('Public Key *', array(), array('context' => 'gofast_graphic_config' )),
    '#id' => 'fieldPublicKey',
  );
  $form['sslCertificate']['optionTwo'] = array(
    '#title' => t('Create SSL Certificate', array(), array('context' => 'gofast_graphic_config' )),
    '#description' => t('You can create your self-signed certificate, if it\'s not. Please enter the information below.', array(), array('context' => 'gofast_graphic_config' )),
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#id' => 'sslCertificateOptionTwo'
  );
  $form['sslCertificate']['optionTwo']['countryName'] = array(
    '#type'=>'select',
    '#title' => t('Country *', array(), array('context' => 'gofast_graphic_config' )),
    '#default_value' => array('1'=>t('Allemagne')),
    '#options' => array('1'=>t('Allemagne DE'),'2'=>t('Autriche AT'),'3'=>t('Belgique BE'),'4'=>t('Bulgarie BG'),'5' => t('Chypre CY'), '6' => t('Croatie HR'),'7' => t('Danemark DK'),'8' => t('Etats-Unis d\'Amérique US'),'9' => t('Espagne ES'),'10' => t('Estonie EE'),'11' => t('Finlande FI'),'12' => t('France FR'),'13' => t('Grèce GR'),'14' => t('Hongrie HU'),'15' => t('Irelande IE'),'16' => t('Italie IT'),'17' => t('Lettonie LV'),'18' => t('Lituanie LT'),'19' => t('Luxembroug LU'),'20' => t('Malte MT'),'21' => t('Pays-Bas NL'),'22' => t('Pologne PL'),'23' => t('Portugal PT'),'24' => t('République Tchèque CZ'),'25' => t('Roumanie RO'),'26' => t('Royaume-Uni GB'),'27' => t('Slovaquie SK'),'28' => t('Slovénie SI'),'29' => t('Suisse CH'),'30' => t('Suède SE')),
    // All contry from UE + US + swiss
    // shortcut country => ISO 2  http://www.trucsweb.com/tutoriels/internet/iso_3166/
    '#validated' => TRUE,
    '#multiple' => false,
    '#attributes'=>array('size'=>6),
    '#id' => 'fieldCountry'
  );
  $form['sslCertificate']['optionTwo']['stateOrProvinceName'] = array(
    '#type' => 'textfield',
    '#title' => t('State or Province *', array(), array('context' => 'gofast_graphic_config' )),
    '#attributes' => array('placeholder' => array(t('Ile-de-France'))),
    '#maxlength' => 64,
    '#id' => 'fieldProvince',
  );
  $form['sslCertificate']['optionTwo']['localityName'] = array(
    '#type' => 'textfield',
    '#title' => t('City *', array(), array('context' => 'gofast_graphic_config' )),
    '#attributes' => array('placeholder' => array(t('Paris'))),
    '#maxlength' => 64,
    '#id' => 'fieldCity',
  );
  $form['sslCertificate']['optionTwo']['organizationName'] = array(
    '#type' => 'textfield',
    '#title' => t('Company *', array(), array('context' => 'gofast_graphic_config' )),
    '#attributes' => array('placeholder' => array(t('My Company'))),
    '#maxlength' => 64,
    '#id' => 'fieldOrganization',
  );
  $form['sslCertificate']['optionTwo']['organizationalUnitName'] = array(
    '#type' => 'textfield',
    '#title' => t('Organizational Unit *', array(), array('context' => 'gofast_graphic_config' )),
    '#attributes' => array('placeholder' => array(t('Department IT'))),
    '#maxlength' => 64,
    '#id' => 'fieldOrganizationalUnit',
  );
  $form['sslCertificate']['optionTwo']['commonName'] = array(
    '#type' => 'textfield',
    '#title' => t('Common Name *', array(), array('context' => 'gofast_graphic_config' )),
    '#attributes' => array('placeholder' => array(t('*.example.com'))),
    '#maxlength' => 64,
    '#id' => 'fieldcommonName',
  );
  $form['sslCertificate']['optionTwo']['emailAddress'] = array(
    '#type' => 'textfield',
    '#title' => t('Email address *', array(), array('context' => 'gofast_graphic_config' )),
    '#attributes' => array('placeholder' => array(t('mycompany@mail.com'))),
    '#maxlength' => 64,
    '#id' => 'fieldEmailAddress',
  );
  $form['sslCertificate']['validateSSLCertificate&next'] = array(
    '#type' => 'submit',
    '#value' => t('Next', array(), array('context' => 'gofast_graphic_config' ))." >>",
    '#attributes' => array('class' => array('btn-primary')),
    '#id' => 'validateSSLCertificateAndnext',
    '#prefix' => '<div style="float: right;">',
    '#suffix' => '</div>',
  );
  $form['sslCertificate']['backSSLCertificate'] = array(
    '#type' => 'submit',
    '#id' => 'lastSSLCertificate',
    '#value' => "<< ".t('Back', array(), array('context' => 'gofast_graphic_config' )),
    '#attributes' => array('class' => array('btn-primary')),
    '#prefix' => '<div style="float: left;">',
    '#suffix' => '</div>',
  );
}
function gofast_graphic_config_user_adm(&$form, &$form_state){
  $form['userAdm']['group_account'] = array(
    '#title' => t('Account Informations'),
    '#type' => 'fieldset',
  );
  $form['userAdm']['group_account']['UIDName'] = array(
    '#type' => 'textfield',
    '#title' => t('Identifier (4 characters min) *', array(), array('context' => 'gofast_graphic_config' )),
    '#attributes' => array('placeholder' => array(t('Administrator', array(), array('gofast:gofast_community')))),
    '#id' => 'fieldIdentifier',
  );
  $form['userAdm']['group_account']['Name'] = array(
    '#type' => 'textfield',
    '#title' => t('Name *', array(), array('context' => 'gofast_graphic_config' )),
    '#attributes' => array('placeholder' => array(t('Administrator Name'))),
    '#id' => 'fieldName',
  );
  $form['userAdm']['group_account']['firstName'] = array(
    '#title' => t('First Name *', array(), array('context' => 'gofast_graphic_config')),
    '#type' => 'textfield',
    '#attributes' => array('placeholder' => array(t('Administrator First_Name'))),
    '#id' => 'fieldfirstName',
  );
  $form['userAdm']['group_account']['userEmail'] = array(
    '#title' => t('Email *', array(), array('context' => 'gofast_graphic_config')),
    '#type' => 'textfield',
    '#attributes' => array('placeholder' => array(t('admin@gofast.fr'))),
    '#id' => 'fieldUseEmail',
  );
  $form['userAdm']['group_account']['passWord'] = array(
    '#title' => t('Password * ', array(), array('context' => 'gofast_graphic_config' )),
    '#type' => 'password',
    '#id' => 'userAdmPassWord',
  );
  $form['userAdm']['group_account']['passWordBis'] = array(
    '#title' => t('Confirm Password *', array(), array('context' => 'gofast_graphic_config' )),
    '#type' => 'password',
    '#id' => 'userAdmPassWordBis',
  );
  $form['userAdm']['group_accountBis']  = array(
    '#type' => 'fieldset',
    '#title' => t('Sub Account informations'),
  );
  $form['userAdm']['group_accountBis']['title'] = array(
    '#title' => t('Title', array(), array('context' => 'gofast_graphic_config' )),
    '#type' => 'textfield',
    '#attributes' => array('placeholder' => array(t('Director of the information systems'))),
    '#id' => 'fieldTitle',
  );
  $form['userAdm']['group_accountBis']['phoneNumber'] = array(
    '#title' => t('Phone Number', array(), array('context' => 'gofast_graphic_config' )),
    '#attributes' => array('placeholder' => array(t('xx-xx-xx-xx-xx'))),
    '#type' => 'textfield',
    '#id' => 'fieldPhoneNumber',
  );
  $form['userAdm']['group_accountBis']['MobilePhoneNumber'] = array(
    '#title' => t('Mobile Phone Number', array(), array('context' => 'gofast_graphic_config' )),
    '#attributes' => array('placeholder' => array(t('xx-xx-xx-xx-xx'))),
    '#type' => 'textfield',
    '#id' => 'fieldMobilePhoneNumber',
  );

  $form['userAdm']['group_accountBisBis']  = array(
    '#type' => 'fieldset',
    '#title' => t('Technical password'),
  );

  $form['userAdm']['group_accountBisBis']['technical_passWord']= array(
    '#title' => t('Technical password *', array(), array('context' => 'gofast_graphic_config' )),
    '#type' => 'password',
    '#id' => 'technical_pwd',
    '#description' => t('This password will be your default password for internal server configuration (MySQL....) '),

  );

    $form['userAdm']['group_accountBisBis']['technical_passWord_bis'] = array(
    '#title' => t('Confirm Password *', array(), array('context' => 'gofast_graphic_config' )),
    '#type' => 'password',
    '#id' => 'technical_pwd_bis',
  );

  $form['userAdm']['back'] = array(
    '#type' => 'submit',
    '#id' => 'lastUserAdmAndnext',
    '#value' => "<< ".t('Back', array(), array('context' => 'gofast_graphic_config' )),
    '#attributes' => array('class' => array('btn-primary')),
    '#prefix' => '<div style="float: left;">',
    '#suffix' => '</div>',
    '#weight' => 99,
   );
  $form['userAdm']['validateUserAdmAndnext'] = array(
    '#type' => 'submit',
    '#id' => 'validateUserAdmAndnext',
    '#value' => t('Next', array(), array('context' => 'gofast_graphic_config' ))." >>",
    '#attributes' => array('class' => array('btn-primary')),
    '#prefix' => '<div style="float: right;">',
    '#suffix' => '</div>',
    '#weight' => 99,
   );
}

/************************************************/
/**************** FORMS ALTER *******************/
/************************************************/
function gofast_graphic_config_form_gofast_graphic_config_frame_alter(&$form, &$form_state){
  gofast_graphic_config_domainname($form, $form_state);
  gofast_graphic_config_SSL($form, $form_state);
  $form['smtp'][] = gofast_admin_smtp_settings_form();
  $form['smtp'][0]['smtp_authentication']['smtp_port']['#title'] = t('Port SMTP *');
  $form['smtp'][0]['smtp_authentication']['smtp_password']['#default_value'] = '';
  $form['smtp'][0]['smtp_authentication']['smtp_security']['#default_value'] = '';
  unset($form['smtp'][0]['smtp_server']['#default_value']);
  unset($form['smtp'][0]['smtp_authentication']['smtp_username']['#default_value']);
  gofast_graphic_config_user_adm($form, $form_state);
}

function gofast_graphic_config_form_alter(&$form, &$form_state){
  if($form_state['build_info']['form_id'] === 'gofast_graphic_config_frame'){
    /***** smtp ****/
    $form['smtp']['recipient'] = array(
      '#type' => 'textfield',
      '#title' => t('Recipient email *', array(), array('context' => 'gofast_graphic_config' )),
      '#description' => t('If the configuration was found, you will receive an email at this address.', array(), array('context' => 'gofast_graphic_config' )),
      '#attributes' => array('placeholder' => array('email@exemple.com')),
      '#maxlength' => 64,
      '#id' => 'recipient-email',
      '#weight' => 98,
    );
    $form['smtp']['validateSMTPAndnext'] = array(
      '#type' => 'submit',
      '#value' => t('Next', array(), array('context' => 'gofast_graphic_config' ))." >>",
      '#attributes' => array('class' => array('btn-primary')),
      '#id' => 'validateSMTPAndnext',
      '#prefix' => '<div style="float: right;">',
      '#suffix' => '</div>',
      '#weight' => 99,
    );
    $form['smtp']['back'] = array(
      '#type' => 'submit',
      '#id' => 'lastSMTP',
      '#value' => "<< ".t('Back', array(), array('context' => 'gofast_graphic_config' )),
      '#attributes' => array('class' => array('btn-primary')),
      '#prefix' => '<div style="float: left;">',
      '#suffix' => '</div>',
      '#weight' => 99,
    );
    /**** create adm ****/
  $form['end']['backfinalSubmit'] = array(
    '#type' => 'submit',
    '#value' => "<< ".t('Back', array(), array('context' => 'gofast_graphic_config' )),
    '#attributes' => array('class' => array('btn-primary')),
    '#id' => 'backfinalSubmit',
    /*'#prefix' => '<div style="float: left;margin-bottom:0%;">',
    '#suffix' => '</div>',*/
  );
  $form['end']['finalSubmit'] = array(
    '#type' => 'submit',
    '#value' => t('Finish configuration!', array(), array('context' => 'gofast_graphic_config' )),
    //'#prefix' => '<div style="margin-left:45%;">',
    '#attributes' => array('class' => array('btn-success')),
    //'#suffix' => '</div>',
    '#id' => 'finalSubmit',
    '#weight' => 99,
  );
  }
}

/************************************************/
/*************** JS FORMS VALIDATE *****************/
/************************************************/
function gofast_graphic_config_frame_validate_domain(){
  $toast_options = gofast_graphic_config_init_toast();
  $subDomain = $_POST['subdomain'];
  $domain = $_POST['domain'];
  $extention = $_POST['extention'];

  $subDomain = trim($subDomain);
  $domain = trim($domain);
  $extention = trim($extention);

  $allAlright = TRUE;
  $bannedCharacs = array('<','>','\'','#','%','{','}','|','"','^',',','~','[',']','`',';','/','?',':','@','=','&');

  foreach($bannedCharacs as $cars){

    $strpossubdomain = strpos($subDomain, $cars);
    $strposdomain = strpos($domain, $cars);
    $strposextention = strpos($extention, $cars);

    if($strpossubdomain !== FALSE){
      $allAlright = FALSE;
    }
    else if($strposdomain !== FALSE){
      $allAlright = FALSE;
    }
    else if($strposextention !== FALSE){
      $allAlright = FALSE;
    }
  }

  if ($allAlright === TRUE){
    $message = array(
        'type' => 'info',
        'message' => t('The domain name has been configured',array(),array('context' => 'gofast_graphic_config' )),
        'options' => $toast_options
        );
      print json_encode($message);
      exit();
  }
}

function gofast_graphic_config_frame_validate_sslcertificate(){
  // usefull variables
  $newSSLPrivateKeyFile = "/var/www/d7/sites/default/files/PrivateKey.key";
  $newSSLPublicKeyFile = "/var/www/d7/sites/default/files/PublicKey.crt";

  $toast_options= gofast_graphic_config_init_toast();

  // case1 : Customer upload his own certificate
  if ($_POST['PrivateFile'] && $_POST['PublicFile'] != null){
    $privateContentFile = $_POST['PrivateFile'];
    $publicContentFile = $_POST['PublicFile'];

    $fileOpenTemp1 = fopen($newSSLPrivateKeyFile, 'w+');
    fputs($fileOpenTemp1, $privateContentFile);
    fclose($fileOpenTemp1);
    exec('dos2unix /var/www/d7/sites/default/files/PrivateKey.key');

    $fileOpenTemp2 = fopen($newSSLPublicKeyFile, 'w+');
    fputs($fileOpenTemp2, $publicContentFile);
    fclose($fileOpenTemp2);
    exec('dos2unix /var/www/d7/sites/default/files/PublicKey.crt');

    if(openssl_x509_check_private_key($publicContentFile, $privateContentFile)){
      $message = array(
        'type' => 'info',
        'message' => t('Configuration of SSL certificate is ok!', array(), array('context' => 'gofast_graphic_config' )),
        'options' => $toast_options
      );
      print json_encode($message);
      exit();
    }
    else{
      $message = array(
        'type' => 'error',
        'message' => t('Somethings goes wrong with your certificates, please check them!', array(), array('context' => 'gofast_graphic_config' )),
        'options' => $toast_options
      );
      print json_encode($message);
      exit();
    }
  }
  // case2 : Customer want to create self-signed certificate
  if ($_POST['Country'] && $_POST['Province'] && $_POST['City'] && $_POST['Compagny'] && $_POST['TypeSite'] && $_POST['NameSite'] && $_POST['EmailAddres']  != null){
    variable_set('stateOrProvinceName',$_POST['Province']);
    variable_set('localityName',$_POST['City']);
    variable_set('organizationName',$_POST['Compagny']);
    variable_set('organizationalUnitName',$_POST['TypeSite']);
    variable_set('commonName',$_POST['NameSite']);
    variable_set('emailAddress',$_POST['EmailAddres']);

    $newCountry = substr($_POST['Country'], -2);
    variable_set('countryName',$newCountry);

    $dn = array(
      "countryName" => variable_get('countryName'),
      "stateOrProvinceName" => variable_get('stateOrProvinceName'), // state or province
      "localityName" => variable_get('localityName'),  //City
      "organizationName" => variable_get('organizationName'), // compagny
      "organizationalUnitName" => variable_get('organizationalUnitName'), // type of site
      "commonName" => variable_get('commonName'), // domain name/name
      "emailAddress" => variable_get('emailAddress'),
    );
    // Generate private and public keys
    $privkey = openssl_pkey_new();
    // Generate the certificate signing request
    $csr = openssl_csr_new($dn, $privkey);
    // You will usually want to create a self-signed certificate
    // once your certificate authority accedes to your request
    // This command creates a valid 365 days self-signed certificate
    // The generated certificate will be signed by the cacert certificate. If cacert is NULL, the generated certificate will be self-signed.
    $sscert = openssl_csr_sign($csr, null, $privkey, 365);

    // you never know : check the generated private/public key match
    if (openssl_x509_check_private_key($sscert,$privkey)){
      // extract the created ressource private key for get the content
      $newprivKey = null;
      openssl_pkey_export($privkey, $newprivKey);
      // save in file the private self-signed key
      file_put_contents($newSSLPrivateKeyFile, $newprivKey);

      // extract the created ressource public self-signed key for get the content
      $newpubKey = null;
      openssl_x509_export($sscert, $newpubKey);
      // save in file the public self-signed key
      file_put_contents($newSSLPublicKeyFile, $newpubKey);

      $message = array(
        'type' => 'info',
        'message' => t('The self-signed certificate has been generated', array(), array('context' => 'gofast_graphic_config' )),
        'options' => $toast_options
      );
      print json_encode($message);
      exit();
    }
    else{
      $message = array(
        'type' => 'error',
        'message' => t('Somethings goes wrong when generating self-signed certificate!', array(), array('context' => 'gofast_graphic_config' )),
        'options' => $toast_options
      );
      print json_encode($message);
      exit();
    }
  }
}

function gofast_graphic_config_frame_validate_smtp_server(){
    $toast_options= gofast_graphic_config_init_toast();
    //$userbdd = user_load(1); // by default load the language of admin
    $l = array('langcode' => 'en', 'context' => 'gofast_graphic_config');
    $subject = t("Configuration successful !", array(), array('context' => 'gofast_graphic_config' ));
    $title = t("Configuration successful !" , array(), array('context' => 'gofast_graphic_config' ));
    $footer = "";
    $contentBody = t("If you read this message, the configuration of your SMTP server is right !", array(), array('context' => 'gofast_graphic_config' ));
    $recpt = array(
      'userRecipientTestSMTP' => array(
        'method' => 'to',
    ));
    $recpt['userRecipientTestSMTP']['recpt'] = $_POST['emailuser'];

    variable_set('site_mail', $_POST['siteemail']); // email of the new site / admin/config/gofast/global ->general ->Email
    variable_set('site_name', $_POST['sitename']); // title of the web site / admin/config/gofast/global ->general ->title
    variable_set('smtp_protocol', $_POST['securityserversmtp']); // protocol use for send email by the SMTP server / form: security
    variable_set('smtp_port', $_POST['portserversmtp']); // port used for the SMTP server / form: Port SMTP
    variable_set('smtp_host', $_POST['urlserversmtp']); // URL/path to target the SMTP server / form: Server SMTP
    if ($_POST['usernamesmtp'] !== ""){
      variable_set('smtp_username', $_POST['usernamesmtp']); // the username for authentication the SMTP server
    }
    if ($_POST['passwordusersmtp'] !== ""){
      variable_set("smtp_password", $_POST['passwordusersmtp']); // the password for authenticate the SMTP server
    }
    $body = theme('gofast_graphic_config_smtp_config_mail_theme', array(
      'body' => $contentBody,
      'l' => $l,
    ));
    $sendOrNot = gofast_mail_queue_api_send_mail($subject, $title, $footer, $body, $recpt);

    if ($sendOrNot == TRUE){
      $message = array(
        'type' => 'info',
        'message' => t('The SMTP server has been configured', array(), array('context' => 'gofast_graphic_config' )),
        'options' => $toast_options
      );
      print json_encode($message);
      exit();
    }
    else {
      $message = array(
        'type' => 'error',
        'message' => t($sendOrNot, array(), $l),
        'options' => $toast_options
      );
      print json_encode($message);
      exit();
    }
}

function gofast_graphic_config_frame_validate_adm_user(){
  $toast_options = gofast_graphic_config_init_toast();

  $message = array(
          'type' => 'info',
          'message' => t("The Admin user has been created", array(), array('context' => 'gofast_graphic_config' )),
          'options' => $toast_options
        );

  print json_encode($message);
  exit();
}
/************************************************/
/**************** FORMS SUBMIT ******************/
/************************************************/
function gofast_graphic_config_frame_submit($form, &$form_state){
  variable_set('firstconnection', TRUE);
  variable_set('current_config_community', TRUE);

  // Usefull variable
  $basepath = $_SERVER['DOCUMENT_ROOT'].'/'; // /var/www/d7/
  $folderpath = 'sites/all/modules/gofast/gofast_graphic_config';

  /******** finish Création ADM user ********/
  /******************************************/
  usurp(1);
  $moreInfos['title'] = $form_state['values']['title'];
  $moreInfos['phoneNumber'] = $form_state['values']['phoneNumber'];
  $moreInfos['MobilePhoneNumber'] = $form_state['values']['MobilePhoneNumber'];
  $moreInfos['Email'] = $form_state['values']['userEmail'];
  $moreInfos['Name'] = $form_state['values']['Name'];
  $moreInfos['firstName'] = $form_state['values']['firstName'];
  $account = gofast_user_adm_create($form_state['values']['UIDName'], $form_state['values']['passWord'], $moreInfos);
  variable_set('gofast_user_administrator_id', $account->uid);
  variable_del('user_membership_waiting_build');

  //create the space root
  gofast_og_post_install();
  gofast_menu_rebuild_og_menu();

  // Change the technical password in all files server configuration
  $technical_password = $form_state['values']['technical_passWord'];
  shell_exec("sed -i 's/\passwordtoreplace/technical_password=\"$technical_password\"/' $basepath$folderpath/gofast_graphic_config_switchdomain_repo/gofast-3.x-switchdomain.sh");

  /**** finish switch domain name ****/
  /***********************************/
  $newsubdomain = $form_state['values']['newSubdomain'];
  $newdomain = $form_state['values']['newdomain'];
  $newextention = $form_state['values']['newextention'];

  shell_exec("sed -i 's/subdomaintoreplace/subdomain=\"$newsubdomain\"/' $basepath$folderpath/gofast_graphic_config_switchdomain_repo/gofast-3.x-switchdomain.sh");
  shell_exec("sed -i 's/domainnametoreplace/domainename=\"$newdomain\"/' $basepath$folderpath/gofast_graphic_config_switchdomain_repo/gofast-3.x-switchdomain.sh");
  shell_exec("sed -i 's/extentiontoreplace/extension=\"$newextention\"/' $basepath$folderpath/gofast_graphic_config_switchdomain_repo/gofast-3.x-switchdomain.sh");
  /**** finish switch SSL Certificate ****/
  /***************************************/
  $newSSLPrivateKeyFile = "/var/www/d7/sites/default/files/PrivateKey.key";
  $newSSLPublicKeyFile = "/var/www/d7/sites/default/files/PublicKey.crt";

  // Get the content of Certificates files
  // drupal file object
  // file_validate_extensions : reset array as empty for allow all extention file
  $SSLPrivateKeyFile = file_save_upload('SSLPrivateKeyFile', array('file_validate_extensions' => array()));
  $urifile1 = $SSLPrivateKeyFile->uri;
  $fileOpen1 = fopen($urifile1, 'r');
  $contentSSLPrivateKeyFile = fread($fileOpen1, filesize($urifile1));
  fclose($fileOpen1);

  $SSLPublicKeyFile = file_save_upload('SSLPublicKeyFile', array('file_validate_extensions' => array()));
  $urifile2 = $SSLPublicKeyFile->uri;
  $fileOpen2 = fopen($urifile2, 'r');
  $contentSSLPublicKeyFile = fread($fileOpen2, filesize($urifile2));
  fclose($fileOpen2);
  // Make copy into a repositary file
  exec('cp /var/www/d7/sites/default/files/PrivateKey.key /var/www/d7/sites/all/modules/gofast/gofast_graphic_config/gofast_graphic_config_switchSSL_repo/PrivateKey.key');
  exec('cp /var/www/d7/sites/default/files/PublicKey.crt /var/www/d7/sites/all/modules/gofast/gofast_graphic_config/gofast_graphic_config_switchSSL_repo/PublicKey.crt');
  // then let the cron run !!

  /**** finish configuration SMTP server ****/
  /******************************************/
  // variable are allready set because sending test already executed.

  /*************** final finish  ************/
  /******************************************/

  drush_gofast_flush_advagg();
  variable_set('gofast_ldap_int_base_dn', 'dc='.$newdomain.',dc='. $newextention);
  variable_set('gofast_ldap_userlist_base_dn', 'ou=UserLists,ou=Groups,dc=' . $newdomain . ',dc=' . $newextention);
  gofast_graphic_config_change_domain_name();

  variable_set('IS_CONFIGURE', TRUE);
  if(IS_AWS_INSTANCE){
    variable_set(('IS_ACCESS'), TRUE);
  }

  //Add a Welcome Message in the blog for the new user.
  $_POST['message'] = "<p>" . t("Welcome to the GoFast Community") . "</b></p>" ;
  gofast_microblogging_add(user_load(1));

  exit;
}

/************************************************/
/************** CUSTOM FUNCTIONS ****************/
/************************************************/
function gofast_graphic_config_change_domain_name(){

  $basepath = $_SERVER['DOCUMENT_ROOT'].'/'; // /var/www/d7/
  $folderpath = 'sites/all/modules/gofast/gofast_graphic_config';

  shell_exec('cp '.$basepath.$folderpath.'/gofast_graphic_config_switchdomain_repo/gofast-3.x-switchdomain.php '.$basepath.$folderpath.'/gofast_graphic_config_switchdomain_exec/');
  shell_exec('cp '.$basepath.$folderpath.'/gofast_graphic_config_switchdomain_repo/gofast-3.x-switchdomain.sh '.$basepath.$folderpath.'/gofast_graphic_config_switchdomain_exec/');

}

function gofast_graphic_config_check_match_private_public_key($pathToPrivateKeyFile, $pathToPublicKeyFile){
  $privateModulus = exec('openssl rsa -noout -modulus -in '.$pathToPrivateKeyFile.' | openssl md5');
  $publicModulus = exec('openssl x509 -noout -modulus -in '.$pathToPublicKeyFile.' | openssl md5');
  if ($privateModulus == $publicModulus) {
    return true;
  }
  else{
    return false;
  }
}

/**
 * Create spaces in GoFAST Community Configuration in order to help the new user
 * @return void
 */
function gofast_graphic_config_create_begin_spaces(){
  usurp(1);
  $author_uid = variable_get('gofast_user_administrator_id','4');
    $options = array(
    'author' => $author_uid,
    'description' => t('~ created automatically ~', array(), array('context' => 'gofast')), // this field is required
    'body' => '',
    'parent' => '4',
  );
  gofast_og_create(t('Group A',array(),array('context'=>'gofast:gofast_community')),'group',$options);

  $options = array(
    'author' => $author_uid,
    'description' => t('~ created automatically ~', array(), array('context' => 'gofast')), // this field is required
    'body' => '',
    'parent' => '5',
  );
  gofast_og_create(t('Orga A',array(),array('context'=>'gofast:gofast_community')), 'organisation',$options);

  $options = array(
    'author' => $author_uid,
    'description' => t('~ created automatically ~', array(), array('context' => 'gofast')), // this field is required
    'body' => '',
    'parent' => '6',
  );
  gofast_og_create(t('Extranet A',array(),array('context'=>'gofast:gofast_community')),'extranet',$options);
  usurp(false);
}

/**
 * Return toast configuration
 *
 * @return array
 */
function gofast_graphic_config_init_toast(){
  return  array(
    "tapToDismiss" => true,
    "toastClass" => 'toast',
    "containerId" => 'toast-container',
    "debug" => false,
    "showMethod" => 'fadeIn', // fadeIn, slideDown, and show are built into jQuery
    "showDuration" => 500,
    "showEasing" => 'swing', // swing and linear are built into jQuery
    "onShown" => "undefined",
    "hideMethod" => 'fadeOut',
    "hideDuration" => 1000,
    "hideEasing" => 'swing',
    "onHidden" => "undefined",
    "extendedTimeOut" => 1000,
    "iconClasses" => array(
      "error" => 'toast-error',
      "info" => 'toast-info',
      "success" => 'toast-success',
      "warning" => 'toast-warning'
    ),
    "iconClass" => 'toast-info',
    "positionClass" => 'toast-top-right',
    "timeOut" => 8000, // Set timeOut and extendedTimeOut to 0 to make it sticky
    "titleClass" => 'toast-title',
    "messageClass" => 'toast-message',
    "target" => 'body',
    "closeHtml" => '<button type="button">&times;</button>',
    "newestOnTop" => true,
    "preventDuplicates" => true,
    "progressBar" => false
  );
}


function gofast_access_config_form(){
$form = array();

  $form['access_config']['instance_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Enter your AWS instance ID', array(), array('context' => 'gofast_access_config' )),
    '#maxlength' => 64,
    '#id' => 'instance_id',
  );
  $form['access_config']['validate_instance'] = array(
    '#type' => 'submit',
    '#value' => t('Submit', array(), array('context' => 'gofast_graphic_config')),
    '#attributes' => array('class' => array('btn-primary')),
    '#id' => 'Validate_instance_id',
  );

  return $form;
}

function gofast_access_config_form_validate($form, &$form_state){
    $instance_id = $form_state['values']['instance_id'];
    $curl = curl_init();
    curl_setopt_array($curl, array(
        CURLOPT_RETURNTRANSFER => 1,
        CURLOPT_URL => 'http://169.254.169.254/latest/meta-data/instance-id',

    ));
    $resp = curl_exec($curl);
    curl_close($curl);
    if ($instance_id != $resp){
        form_set_error('instance_id', t('Your AWS instance ID is not correct', array(), array('context' => 'gofast')));
        return;
    }
}


function gofast_access_config_form_submit($form, &$form_state){
    $form_state['redirect'] = '/Welcome';
    variable_set('IS_ACCESS', TRUE);
}
