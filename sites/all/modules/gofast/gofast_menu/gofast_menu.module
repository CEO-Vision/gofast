<?php


require_once 'include/gofast_menu.create.inc';
require_once 'include/gofast_menu.spaces.inc';
require_once 'include/gofast_menu.utils.inc';

/**
 * Implements hook_init
 */
function gofast_menu_init()
{
  //Define context for blocks of the menu
  if (module_exists('gofast_privatemsg')) {
    gofast_menu_set_context();
  }
  $lib = 'sites/all/libraries';
  drupal_add_css($lib . '/smartmenus-1.1.0/addons/bootstrap/jquery.smartmenus.bootstrap.css');
  drupal_add_js($lib . '/smartmenus-1.1.0/jquery.smartmenus.js');
  drupal_add_js($lib . '/smartmenus-1.1.0/addons/bootstrap/jquery.smartmenus.bootstrap.js');
}

/**
 * Implements hook_enable()
 */
function gofast_menu_enable()
{
  $gofast_privatemsg_weight = db_select('system')
    ->fields('system', array('weight'))
    ->condition('name', 'gofast_privatemsg', '=')
    ->execute()
    ->fetchField();

  db_update('system')
    ->fields(array('weight' => $gofast_privatemsg_weight + 1))
    ->condition('name', 'gofast_menu')
    ->execute();
}


/**
 * Implements hook_theme().
 */
function gofast_menu_theme()
{
  $themes = array();
  $themes = array(
    'gofast_menu_navigation' => array(
      'template'  => 'tpl/gofast-menu-navigation',
      'arguments' => array(
        'menu' => array()
      ),
    ),
    'gofast_menu_about' => array(
      'template'  => 'tpl/gofast-menu-about',
      'arguments' => array(),
    ),
    'gofast_menu_create' => array(
      'template'  => 'tpl/gofast-menu-create',
      'arguments' => array(),
    ),
    'gofast_menu_profile' => array(
      'template'  => 'tpl/gofast-menu-profile',
      'arguments' => array(),
    ),
    'gofast_menu_search' => array(
      'template'  => 'tpl/gofast-menu-search',
      'arguments' => array(
        'content' => NULL
      ),
    ),
    'gofast_menu_langue' => array(
      'template'  => 'tpl/gofast-menu-langue',
      'arguments' => array(
        'content' => NULL
      ),
    ),
    'gofast_menu_sidebar' => array(
      'template'  => 'tpl/gofast-menu-sidebar',
      'arguments' => array(
        'menus' => array()
      ),
    ),
    'gofast_menu_magical_menu' => array(
      'template'  => 'tpl/gofast-menu-magical-menu',
      'arguments' => array(
        'path_exist' => NULL,
        'is_admin' => NULL,
        'block_recenlty_read' => NULL,
        'block_recenlty_read_content' => NULL
      ),
    ),
    'gofast_menu_mobile_magical_menu' => array(
      'template'  => 'tpl/gofast-menu-mobile-magical-menu',
      'arguments' => array(
        'is_admin' => NULL
      ),
    ),
    'gofast_menu_icons' => array(
      'template' => 'tpl/gofast-menu-icons',
      'arguments' => array(
        'unread_workflows_count' => NULL,
        'unread_messages_count' => NULL,
        'unread_notifications_count' => NULL
      )
    ),
    'gofast_navbar_items' => [
      'template' => 'tpl/gofast-navbar-items',
      'arguments' => [
        'navItems' => []
      ]
    ],
    'gofast_navbar_item' => [
      'template' => 'tpl/gofast-navbar-item',
      'arguments' => [
        'navItem' => []
      ]
    ],
    'gofast_dropdown_menu' => [
      'template' => 'tpl/gofast-dropdown-menu',
      'arguments' => [
        'menu' => []
      ]
    ],
    'gofast_dropdown_submenu' => [
      'template' => 'tpl/gofast-dropdown-submenu',
      'arguments' => [
        'link' => []
      ]
    ],
    'gofast_navbar' => [
      'template' => 'tpl/gofast-navbar',
      'arguments' => [
        'rightLinks' => [],
        'leftLinks' => []
      ]
    ],
    'gofast_navbar_nav' => [
      'template' => 'tpl/gofast-navbar-nav',
      'arguments' => [
        'links' => []
      ]
    ],
    'gofast_dropdown_dinamique_menu' => [
      'template' => 'tpl/gofast-dropdown-dinamique-menu',
      'arguments' => [
        'id_toggle' => ''
      ]
    ],
    'gofast_menu_aside' => [
      'template' => 'tpl/aside/gofast-menu-aside',
      'arguments' => []
    ],
    'gofast_menu_menu_nav' => [
      'template' => 'tpl/menu/gofast-menu-menu-nav',
      'arguments' => [
        'sections' => []
      ]
    ],
    'gofast_menu_menu_item' => [
      'template' => 'tpl/menu/gofast-menu-menu-item',
      'arguments' => [
        'link' => []
      ]
    ],
     'gofast_menu_menu_content' => [
      'template' => 'tpl/menu/gofast-menu-menu-content',
      'arguments' => [
        'links' => []
      ]
    ],
    'gofast_menu_header' => [
      'template' => 'tpl/header/gofast-menu-header',
      'arguments' => []
    ],
    'gofast_menu_header_menu' => [
      'template' => 'tpl/header/gofast-menu-header-menu',
      'arguments' => [
        'menus' => []
      ]
    ],
    'gofast_menu_header_menu_item' => [
      'template' => 'tpl/header/gofast-menu-header-menu-item',
      'arguments' => [
        'menus' => []
      ]
    ],
    'gofast_menu_header_topbar' => [
      'template' => 'tpl/header/gofast-menu-header-topbar',
      'arguments' => [
        'leftSection' => [],
        'rightSection' => [],
      ]
    ],
    'gofast_menu_header_subheader' => [
      'template' => 'tpl/header/gofast-menu-header-subheader',
      'arguments' => []
    ],
    'gofast_menu_topbar_dropdown' => [
      'template' => 'tpl/dropdown/gofast-menu-topbar-dropdown',
      'arguments' => [
        'link' => '',
      ]
    ],
    'gofast_menu_topbar_dropdown_right' => [
      'template' => 'tpl/dropdown/gofast-menu-topbar-dropdown-right',
      'arguments' => [
        'link' => '',
      ]
    ],
    'gofast_menu_topbar_profile' => [
      'template' => 'tpl/gofast-menu-topbar-profile'
    ],
    'gofast_menu_topbar_menu_item' => [
      'template' => 'tpl/topbar/gofast-menu-topbar-menu-item',
      'arguments' => [
        'link' => '',
      ]
    ],
    'gofast_subheader_breadcrumbs' => [
      'template' => 'tpl/subheader/gofast-subheader-breadcrumbs',
      'arguments' => [
        'breadcrumb' => [],
      ]
    ],
    'gofast_menu_topbar_recently_read' => [
        'template' => 'tpl/topbar/gofast-menu-topbar-recently-read',
        'arguments' => [
          'recently_read' => [],
        ]
    ],
    'gofast_menu_topbar_rss_feed' => [
      'template' => 'tpl/topbar/gofast-menu-topbar-rss-feed',
    ],
    'gofast_menu_topbar_favorites_contents' => [
        'template' => 'tpl/topbar/gofast-menu-topbar-favorites-contents',
        'arguments' => [
          'contents' => [],
        ]
    ],
    'gofast_menu_topbar_favorites_folders' => [
        'template' => 'tpl/topbar/gofast-menu-topbar-favorites-folders',
        'arguments' => [
          'folders' => [],
        ]
    ],
    'gofast_menu_topbar_favorites' => [
        'template' => 'tpl/topbar/gofast-menu-topbar-favorites',
    ],
    'gofast_menu_header_mobile' => [
      'template' => 'tpl/header/gofast-menu-header-mobile',
    ]

  );


  return $themes;
}



/**
 * Implements hook_menu().
 */
function gofast_menu_menu()
{
  $items = array();

  $items['gofast_get_block'] = array(
    'title' => 'debug',
    'description' => 'debug',
    'page callback' => 'gofast_get_block_menu_async',
    'access arguments' => array('access content'),
    'delivery callback' => 'gofast_ajax_delivery'
  );

  $items['messages/get_unread_count'] = array(
    'page callback' => 'gofast_menu_get_unread_messages',
    'access callback' => 'privatemsg_user_access',
    'access arguments' => array("read privatemsg"),
    'type' => MENU_CALLBACK,
    'delivery callback' => 'gofast_ajax_delivery'
  );

  //Disabled until this is finished
  /*$items['notifications/get_unread_count'] = array(
        'page callback' => 'gofast_menu_get_unread_notifications',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
        'delivery callback' => 'gofast_ajax_delivery'
    );*/

  $items['workflows/get_unread_count'] = array(
    'page callback' => 'gofast_menu_get_unread_workflows',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'delivery callback' => 'gofast_ajax_delivery'
  );

  $items['gofast/menu/get'] = array(
    'page callback' => 'gofast_menu_get_html_menu_from_gid',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['gofast/last_recenlty_read'] = array(
    'page callback' => 'gofast_menu_get_last_recenlty_read',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['gofast/get/personnal_favorites'] = array(
    'page callback' => 'gofast_menu_get_favorites',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['gofast/get/rssFeed'] = array(
    'page callback' => 'gofast_menu_get_rssFeed',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['gofast/get/privateMessages'] = array(
    'page callback' => 'gofast_menu_get_privateMessages',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );


  return $items;
}


/**
 * Implements hook_poll_info()
 *
 * @return array
 */
function gofast_menu_poll_info()
{
  return array(
    'private_messages' => array(
      'label' => 'Private message',
      'description' => 'Get and set new private messages',
      'interval' => 5,
      'context' => TRUE,
      'selector' => '#gofast_pm_block'
    ),
    /*'workflows' => array(
      'label' => 'Workflows',
      'description' => 'Get and set new workflows',
      'interval' => 10,
      'context' => TRUE,
      'selector' => NULL
    )*/
  );
}


/**
 * Implements hook_poll()
 */
function gofast_menu_poll($poll_name, $poll_info, $context)
{
  $commands = array();
  drupal_static_reset('gofast_privatemsg_unread_count'); //To rebuild the static cache
  $block_context = $context['block_menu']; //Block infos in global context

  $pm_context = $block_context['private_message']; //Private message infos in block menu context

  $pm_unread_count_context = $pm_context['unread_count']; //Count of unread PM in context
  $pm_unread_count = json_decode(gofast_menu_get_unread_messages())->count; //Count of unread PM at this time

  $isNewPM = ($pm_unread_count > 0 && $pm_unread_count > $pm_unread_count_context); //TODO: Read a new message + receive a new one in 1 poll interval will result in no action

  if ($poll_name == 'private_messages' && $isNewPM) {
    $display_id = 'gofast_inbox';
    $blockObject = new stdClass();
    $view = views_get_view('gofast_private_msg', true);
    $blockObject->subject = t('Messages', array(), array('context' => 'gofast'));
    $blockObject->content['#markup'] = $view->preview($display_id);
    // We add custom data to the blocks depending of delta
    $blockObject->content['#markup'] .= appendCustomData($display_id);
    $blockObject->module = 'gofast';
    $blockObject->region = '';
    $blockObject->delta = '';
    $arrayBlock = _block_get_renderable_array(array($blockObject));
    $output = drupal_render($arrayBlock);
    $commands[] = ajax_command_html($poll_info['selector'], $output);

    $commands[] = ajax_command_html('#unread_pm_count', $pm_unread_count);
    $commands[] = ajax_command_invoke('#unread_pm_count', 'css', array(array('visibility' => 'visible')));
    $commands[] = gofast_command_toast_message(t('You just received a new private message !', array(), array('context' => 'gofast')));

    global $user;
    $threads_id = array_keys(gofast_privatemsg_get_unread_messages($user));

    //privatemsg_operation_execute(privatemsg_privatemsg_thread_operations()['mark as unread'], $threads_id, $user);
    foreach ($threads_id as $thread_id) {
      $unread_count_for_thread = gofast_privatemsg_count_unread_message_for_thread($thread_id, $user);
      $commands[] = ajax_command_replace('#is_new_' . $thread_id, '<span class="badge badge-notify" id="badge-message-' . $thread_id . '" style="visibility: visible;">' . $unread_count_for_thread . '</span><img id="msg-new-' . $thread_id . '" class="msg-new" src="/sites/all/themes/bootstrap-gofast/img/newMessage.gif" width="16px" height="16px" alt="edit" />');
    }

    gofast_menu_set_context('private_message', 'unread_count', $pm_unread_count);
  }
  return $commands;
}

/**
 * Implement hook_preprocess_page()
 */
function gofast_menu_preprocess_page(&$variables)
{
  ctools_add_js('ajax-responder');
  $path = drupal_get_path('module', 'gofast');
  drupal_add_js($path . '/gofast_menu/gofast_menu.js');
  drupal_add_js($path . '/gofast_menu/js/gofast_menu_topbar_menu.js');
  drupal_add_js($path . '/gofast_menu/js/gofast_menu_mega_menu.js');
}

/**
 * Implements hook_block_info
 */
function gofast_menu_block_info()
{
  $blocks['gofast_menu_icons'] = array(
    'info' => t('Icons in top menu', array(), array('context' => 'gofast')),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  $blocks['gofast_menu_navigation'] = array(
    'info' => t('gofast_menu_navigation', array(), array('context' => 'gofast')),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['gofast_menu_sidebar'] = array(
    'info' => t('gofast_menu_sidebar', array(), array('context' => 'gofast')),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  return $blocks;
}

/**
 * Implements hook_block_view
 */
function gofast_menu_block_view($delta = '')
{
  $block = array();
  switch ($delta) {
    case 'gofast_custom_test':
      $block['subject'] = 'test block';
      $block['content']['#markup'] = '<p class="test">Ceci est un contenu</p>';
      $block['content']['#attached']['css'][] = '.test{color:red;}';
      break;
  }
  return $block;
}

/**
 * Implements hook_form_FORM_ID_alter()
 */
function gofast_menu_form_views_exposed_form_alter(&$form, $form_state, $form_id)
{
  if ($form_id === 'views_exposed_form' && $form_state['view']->name === 'gofast_private_msg') {
    $form['author_1']['#autocomplete_path'] = 'gofast_og_user_autocomplete';
  }
}



##### TEMPLATE PREPROCESS ######

function template_preprocess_gofast_menu_header_topbar(&$variables){

  global $user;
  $rightSection = [];
  $leftSection = [];

  //$rightSection[] = gofast_create_menu_nofification();
  $rightSection[] = gofast_create_menu_create();
  $rightSection[] = gofast_create_menu_spaces();

  $rightSection[] = gofast_create_menu_workflow();

  $othersMenus = gofast_create_menu_others_menus();

  foreach($othersMenus as $menu){
    $rightSection[] = $menu;
  }

  $variables['language'] = gofast_get_flag_lang_switcher_content();
  $leftSection[] = gofast_create_menu_about();

  $variables['rightSection'] = $rightSection;
  $variables['leftSection'] = $leftSection;

  $variables['user'] = $user;

}

function template_preprocess_gofast_menu_sidebar(&$variables)
{
  $menus = [];

  $menu = array(
    'dashboard' => array(
      'label' => t('Dashboard'),
      'icon' => 'fas fa-tachometer-alt',
      'href' => '/dashboard'),
    'activity' => array(
      'label' => t('Activity feed'),
      'icon' => 'fas fa-list-alt',
      'href' => '/activity'),
    'espaces' => array(
      'label' => t('Browser'),
      'icon' => '',
      'svg' => '/sites/all/themes/bootstrap-keen/img/collaborative_space.svg',
      'href' => '/gofast/browser'),
      'calendar' => array('label' => t('Calendar'), 'icon' => 'fas fa-calendar-alt', 'href' => '#'),
      'task' => array('label' => t('Tasks'), 'icon' => 'fas fa-cogs', 'href' => '#'),
      'discussion' => array('label' => t('Discussion'), 'icon' => 'fas fa-comments', 'href' => '#'),
      'directory' => array('label' => t('Directory'), 'icon' => 'fas fa-address-book', 'href' => '#')
  );
  $menus[] = $menu;


  $config = [['label' => t('Configuration'), 'icon' => 'fas fa-tools', 'href' => '#']];

  $menus[] = $config;

  $variables['menus'] = $menus;

}

function template_preprocess_gofast_menu_aside(&$variables){
  global $user;
  $detect = new Mobile_Detect();

  // Check if current user is a GoFAST administrator
  if (gofast_user_has_role('administrator', $user) == 1) {
    $is_admin = true;
  }

  // Changed menu if is_mobile detected.
  $mobile = FALSE;
  if ($detect->isMobile() || gofast_essential_is_essential()) {
    $mobile = TRUE;
  }

  if ($mobile) {
    $menus = _gofast_mobile_menu();
  } else {
    $menus = _gofast_normal_menu();
  }

  //check permissions for each link
  foreach($menus as $key_parent=>$menu_lvl1){
      foreach($menu_lvl1["menu"] as $key=>$menu_lvl2){
          if(isset($menu_lvl2["href"])){
            $path = substr($menu_lvl2["href"], 1);
            if ($router_item = menu_get_item($path)) {
                if (!$router_item['access']) {
                    unset($menus[$key_parent]["menu"][$key]);
                }
            }
          }else{
             foreach($menu_lvl2["menu"] as $key2=>$menu_lvl3){
                  $path = substr($menu_lvl3["href"], 1);
                    if ($router_item = menu_get_item($path)) {
                        if (!$router_item['access']) {
                            unset($menus[$key_parent]["menu"][$key]["menu"][$key2]);
                        }
                    }
             }
          }
     }
  }

  //allow menu to alter this menu
  foreach (module_implements('alter_aside_menu') as $module) {
    $menus = module_invoke($module, 'alter_aside_menu',$menus);
  }
  
  $variables['menus'] = $menus;

}

function template_preprocess_gofast_menu_header_menu(&$variables){


$menus[] = gofast_create_menu_create();
$spaces[] = gofast_create_menu_spaces();

$variables['menus'] = $menus;
$variables['spaces'] = $spaces;

}

function template_preprocess_gofast_menu_topbar_profile(&$variables){

  $link = [
    'icon' => 'fas fa-question',
    'label' => '',
    'id' => '',
    'class' =>'',
    'subclass' => 'menu-submenu-right',
    'href' => '',
    'menu' => []
  ];

  // Get GoFAST Multi language
  if (drupal_multilingual()) {
    $path = $_GET['q'];
    $available_languages = gofast_clean_language_list();
    global $language;
    foreach ($available_languages as $available_language) {
      if ($available_language->enabled == 0) {
        continue;
      }
      $language_enabled = array(
        'label' => $available_language->name,
        'href' => '/' . $path . '?language=' . $available_language->language,
        'icon' => 'flag-icon flag-icon-' . $available_language->language . ' flag-icon-squared'
      );
      $languages[] = $language_enabled;

      if ($language->language === $available_language->language) {
        $selected_language = $language_enabled;
      }
    }
  }
    
  $links = [
    'profile' => [
      'href' => '/user',
      'icon' => 'fas fa-user',
      'label' => t("My profile")
    ],
    'subscriptions' => [
      'href' => '/modal/nojs/subscriptions',
      'class' => 'ctools-use-modal',
      'icon' => 'fas fa-rss',
      'label' => t("Subscriptions")
    ],
  ];
  
  $detect = new Mobile_Detect();
  if(!$detect->isTablet()){
    if(gofast_essential_is_essential()) {
      $switchVersion = array(
        'href' => '/gofast/user/login/version/standard',
        'label' => 'GoFAST Plus',
        'icon' => 'fa fa-laptop'
      );
    }else{
      $switchVersion = array(
        'href' => '/gofast/user/login/version/mobile',
        'label' => 'GoFAST Essential',
        'icon' => 'fa fa-mobile'
      );
    }
    $links["switchVersion"] = $switchVersion;
  }
  $links["logout"] = [
    'href' => '/user/logout',
    'icon' => 'fas fa-sign-out-alt',
    'label' => t("Logout")
  ];

  $variables['link'] = $link;
  $variables['links'] = $links;
}

function template_preprocess_gofast_menu_header_subheader(&$variables){

  $node = NULL;

  if(isset($variables['node'])){
    $node = $variables['node'];
  }

  if (empty($breadcrumb)) {
    $breadcrumb = array();
  }

  $output = '';
  $title_plus = t("Show more breadcrumb");
  $title_minus = t("Show less breadcrumb");

  if (isset($breadcrumb[0]) && !is_array($breadcrumb[0])) {
    array_shift($breadcrumb);
    $items = array();
    foreach ($breadcrumb as $item) {
      if (!is_array($item)) {
        $items[] = $item;
      } else {
        $items[] = $item['data'];
      }
    }
    $output = '<ul class="breadcrumb breadcrumb-transparent breadcrumb-dot gofast breadcrumb-gofast">' . implode(' » ', $items) . '</ul>';
  } else {
    $output = '<ul class="breadcrumb flex-nowrap breadcrumb-transparent breadcrumb-dot gofast breadcrumb-gofast">';
    $full_breadcrumb = $breadcrumb;
    $reverse_bc = array_reverse($breadcrumb);
    $array_clone = $reverse_bc;
    $first_element_bc = array_shift($array_clone);
    if (isset($first_element_bc['data'])) {
      array_shift($reverse_bc);
      $full_breadcrumb = array_reverse($reverse_bc);
    }

    foreach ($full_breadcrumb as $key => $crumbs) {
      if (isset($crumbs['data'])) {
        continue;
      }
      array_shift($crumbs);
      $line = implode(' » ', $crumbs);
      //if ($key !== count($breadcrumb) - 1) {
      if ($key === 0) {
        $class = "gofast_breadcrumb_display";
      } else {
        $class = "gofast_breadcrumb_hidden gofast_breadcrumb_hidden_origine";
      }
      $output .= "<div id='" . $key . "' class='" . $class . "' style='margin:2px;' >" . $line;
      if ($key === 0 && count($full_breadcrumb) > 1) {
        $output .= " <i class='glyphicon glyphicon-plus-sign' id='gofast_breadcrumb_more' style='cursor:pointer;color:black;' title=\"" . $title_plus . "\" ></i>";
      }
      //}
    }
    $output .= "</ul>";

    $output .= "<style type='text/css'> .gofast_breadcrumb_hidden { display : none; }</style>";
    $output .= '<script type="text/javascript">
    jQuery("#gofast_breadcrumb_more").click(function(){
      jQuery(".gofast_breadcrumb_hidden_origine").toggleClass( "gofast_breadcrumb_hidden");
      if(jQuery(this).hasClass("glyphicon-plus-sign")){
        jQuery(this).removeClass("glyphicon-plus-sign").addClass("glyphicon-minus-sign").attr("title", "' . $title_minus . '");
      }else{
        jQuery(this).removeClass("glyphicon-minus-sign").addClass("glyphicon-plus-sign").attr("title", "' . $title_plus . '");
      }
    })
    </script>';
  }


  if($node){
    $variables['contextual_actions'] = gofast_get_breadcrumbs_alt($node);
    $variables['breadcrumb'] = "<div class='breadcrumb-gofast'></div>";
  } else {
    $variables['contextual_actions'] = "";
    $variables['breadcrumb'] = "";
  }
  // // uncomment if needed to make navigation arrows work with wikis
  // if ($node && $node->type == "article") {
  //   $weight =  gofast_book_get_articles_weights([$node->nid])[0];
  //   if (isset($weight->body_summary)) {
  //     $node->weight = $weight->body_summary;
  //   }
  //     $article_ref = gofast_cmis_node_get_reference_by_nid_without_cmis($node->nid);
  //     $article_path = gofast_cmis_webservice_get_node_parents($article_ref)[0];
  //     if ($article_path) {
  //       $book = gofast_book_get_minimal_book_by_gid(NULL, FALSE, $article_path, FALSE);
  //       if (is_array($book)) {
  //         // already sorted by weight
  //         $node->book = $book;
  //       }
  //     }
  // }
  $variables['breacrumb_node'] = $output;
}

function _gofast_normal_menu() {
  global $user;
  $private_space_id = gofast_og_get_user_private_space($user, false);

  $menus = [];

  $section = [
    'label' => '',
    'menu' => []
  ];

  $menu1 = array(
    'dashboard' => array(
      'label' => t('Dashboard'),
      'icon' => 'fas fa-tachometer-alt',
      'href' => '/dashboard'),
    'activity' => array(
      'label' => t('Activity feed'),
      'icon' => 'fas fa-list-alt',
      'href' => '/activity')
  );

  $section['menu'] = $menu1;
  $menus[] = $section;

  // Desktop menu version.
  $menu2['espaces'] = [
    'label' => t('Collaborative spaces'),
    'id' => 'gofastCollaborativeSpacesMenuItem',
    'icon' => '',
    'svg' => '/sites/all/themes/bootstrap-keen/img/collaborative_space.svg',
    'href' => '/node/' . $private_space_id . "#ogdocuments"
  ];

  // Desktop menu version.
  $menu2['advanced_search'] = [
    'label' => t('Advanced search'),
    'id' => 'gofastAdvancedSearchMenuItem',
    'icon' => 'fas fa-search-plus',
    'href' => '/search/advanced'
  ];

  $menu2['task'] = [
    'label' => t('Workflows & Tasks'),
    'icon' => 'fas fa-flag',
    'href' => '/workflow/dashboard',
  ];
  $menu2['calendar'] = [
    'label' => t('Calendar'),
    'icon' => 'fas fa-calendar-alt',
    'href' => '/node/' . gofast_og_get_user_private_space($user)->nid . "#ogcalendar  ",
  ];

  $section['label'] = t('Content and deadline');
  $section['menu'] = $menu2;

  $menus[] = $section;

  $menu3['discussion'] = [
    'label' => t('Discussion'),
    'icon' => 'fas fa-comments',
    'href' => '/conversation',
  ];
  $menu3['directory'] = [
    'label' => t('Directories'),
    'icon' => 'fas fa-address-book',
    'id' => 'directories_menu'
  ];

  $menu3['directory']['menu'][] = [
    'label' => t('Users'),
    'href' => '/directory/users'
  ];
  $menu3['directory']['menu'][] = [
    'label' => t('Userlists'),
    'href' => '/directory/userlists'
  ];
  $menu3['directory']['menu'][] = [
    'label' => t('Spaces'),
    'href' => '/directory/spaces'
  ];
  $menu3['directory']['menu'][] = [
    'label' => t('Contacts listing'),
    'href' => '/directory/contacts-listing'
  ];

  $section['label'] = t('My collaborators');
  $section['menu'] = $menu3;

  $menus[] = $section;

  // $menu3['Administration'] = ['label' => 'Administration', 'icon' => 'fas fa-users-cog'];
  $menu4['configuration'] = ['label' => t('GoFAST Configuration'), 'icon' => 'fas fa-tools', 'href' => '/admin/config/gofast/global'];
  $menu4['statistic'] = ['label' => t('Statistics'), 'icon' => 'fas fa-chart-line', 'href' => '/gofast_stats/dashboard'];
  $menu4['audit'] = ['label' => t('Audit'), 'icon' => 'fas fa-file-invoice', 'href' => '/gofast_audit'];
  $menu4['ldap_import'] = ['label' => t('Import Users From LDAP'), 'icon' => 'fas fa-address-book"', 'href' => '/admin/config/gofast/ldap/manage'];

  $section['label'] = t('Support and administration');
  $section['menu'] = $menu4;

  $menus[] = $section;
  return $menus;
}

function _gofast_mobile_menu() {
  $iPod    = stripos($_SERVER['HTTP_USER_AGENT'], "iPod");
  $iPhone  = stripos($_SERVER['HTTP_USER_AGENT'], "iPhone");
  $iPad    = stripos($_SERVER['HTTP_USER_AGENT'], "iPad");
  $Android = stripos($_SERVER['HTTP_USER_AGENT'], "Android");

  if ($iPod || $iPhone || $iPad) {
    $url = "https://apps.apple.com/app/vector/id1083446067";
  } else if ($Android) {
    $url = "https://play.google.com/store/apps/details?id=im.vector.app";
  }
  global $user;
  $menus = [];

  $section = [
    'label' => '',
    'menu' => []
  ];

  $menu1 = [
    'home' => [
      'label' => t('Home'),
      'icon' => 'fa fa-home',
      'href' => '/home_page_navigation#navBrowser',
      'class' => "gofastCollaborativeSpacesMenuItem"
    ],
  ];

  $section['menu'] = $menu1;
  $menus[] = $section;

  $menu2 = [];
  $menu2['private_documents'] = [
    'label' => t("Personal Space"),
    'icon' => '',
    'svg' => '/sites/all/themes/bootstrap-keen/img/collaborative_space.svg',
    'href' => "/home_page_navigation?&path=/Sites/_{$user->name}#navBrowser",
  ];
  $menu2['calendar'] = [
    'label' => t('Calendar'),
    'icon' => 'fas fa-calendar-alt',
    'href' => "/calendar_simplified",
  ];
  $menu2['task'] = [
    'label' => t("Workflows & Tasks"),
    'icon' => 'fas fa-cogs',
    'href' => "/tasks_page_navigation#lightDashboardMyTab",
  ];

  if (!empty($url)) {
    $menu2['discussion'] = [
      'label' => t('Chat (download)'),
      'icon' => 'fa fa-download ',
      'href' => $url,
    ];
  } else {
    $menu2['discussion'] = [
      'label' => t('Chat'),
      'icon' => 'fa fa-comments ',
      'href' => '/conversation',
    ];
  }

  $menu2['directory'] = [
    'label' => t('Directories'),
    'icon' => 'fas fa-address-book',
  ];

  $menu2['directory']['menu'][] = [
    'label' => t('Users'),
    'href' => '/directory/users',
  ];
  $menu2['directory']['menu'][] = [
    'label' => t('Userlists'),
    'href' => '/directory/userlists',
  ];
  $menu2['directory']['menu'][] = [
    'label' => t('Spaces'),
    'href' => '/directory/spaces',
  ];
  $menu2['directory']['menu'][] = [
    'label' => t('Contacts listing'),
    'href' => '/directory/contacts-listing',
  ];

  $menu2['profile'] = [
    'label' => t('Profile'),
    'icon' => 'fa fa-user',
    'href' => '/user',
  ];
  
  $language_list = gofast_clean_language_list();
  if (drupal_multilingual() && count($language_list) >= 2) {
    $menu2['lang'] = [
      'label' => t('Language'),
      'icon' => 'fas fa-flag',
    ];
    foreach ($language_list as $language) {
      if($language->enabled == 0){
        continue;
      }
      $path = gofast_xss_clean($_GET['q']);
      $menu2['lang']['menu'][] = [
        'id' => 'gofast-mobile-lang-switch',
        'label' => t($language->name),
        'href' => '/' . $path . '?language=' . $language->language,
      ];
    }
  }

  $menu2['logout'] = array(
    'href' => '/user/logout',
    'label' => t('Logout', array(), array('context' => 'gofast:gofast_menu')),
    'icon' => 'fas fa-power-off',
  );

  $section['menu'] = $menu2;
  $menus[] = $section;
  return $menus;
}

##### END TEMPLATE PREPROCESS ######
