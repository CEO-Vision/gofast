<?php

/**
 * @package gofast_link_sharing
 */

require_once 'gofast_link_sharing_utils.inc';
require_once 'gofast_link_sharing_form.inc';

global $base_url;


/**
 * The default expiry period applied to the sharing url
 * Applied for anonymous user access only
 */
define('DEFAULT_EXPIRY_PERIOD', '+2 weeks');
define('DEFAULT_EXPIRY_PERIOD_STRING', '2 weeks');

/**
 * The Default path in whic document should be located
 * to be allowed to be shared with anonymous users
 */
define('DEFAULT_EXTERNAL_SHARING_LOC', '/Sites/_Extranet');



function gofast_link_sharing_init(){
    /**
    * The Cipher key used to encrypt and decrypt the sharing url
    */
    define('CIPHER_KEY', variable_get("gofast_link_sharing_cipher", ""));
    drupal_add_js(drupal_get_path('module', 'gofast_link_sharing') . "/js/gofast_link_sharing.js");

}
/**
 * Implements hook_menu()
 */
function gofast_link_sharing_menu() {
  $items = array();

  //access to document
  $items['public/sharing'] = array(
    'title' => 'Share',
    'description' => 'Share a link to a File',
    'page callback' => 'gofast_link_sharing',
    'page arguments' => array(2),
    'type' => MENU_NORMAL_ITEM,
    'access callback' => TRUE,
    'delivery callback' => 'gofast_link_sharing_delivery_callback'
  );
  
  $items['sharing/logged_in/%'] = array(
    'title' => 'Share',
    'description' => 'Share a link to a File',
    'page callback' => 'gofast_link_sharing',
    'page arguments' => array(2),
    'access arguments' => array('access content'),
    'access callback' => 'user_access',
    'type' => MENU_NORMAL_ITEM,
  );

  //send mail
  $items['public/sharing_dl'] = array(
    'title' => 'Share',
    'description' => 'Send a mail to the transmitter',
    'page callback' => 'gofast_sharing_download',
    'page arguments' => array(2),
    'type' => MENU_NORMAL_ITEM,
    'access callback' => TRUE,
    //'delivery callback' => 'gofast_link_sharing_delivery_callback'
  );

  // Initiate share with external
  $items['linksharing/%node'] = array(
    'title' => 'Send link by email',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('gofast_link_sharing_form', 1),
    'access arguments' => array('view', 1),
    'access callback' => 'node_access',
    'type' => MENU_CALLBACK,
  );

   // Initiate share with external
  $items['modal/%ctools_js/linksharing/%node'] = array(
    'title' => 'Send link by email',
    'page callback' => 'gofast_link_sharing_form_modal',
    'page arguments' => array(1, 3),
    'access arguments' => array('view', 3),
    'access callback' => 'node_access',
    'type' => MENU_CALLBACK,
  );

  $items['linksharing/manage_linksharing/process'] = array(
    'page callback' => 'gofast_manage_linksharing_process',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['public/multi_sharing/dl'] = array(
    'title' => 'Share',
    'description' => 'Share a link to a file',
    'page callback' => 'gofast_link_sharing_folder_dl',
    'page arguments' => array(3),
    'access callback' => TRUE,
    'delivery callback' => 'gofast_ajax_delivery'
  );

  //access to document
  $items['public/multi_sharing'] = array(
    'title' => 'Share',
    'description' => 'Share a link to a file',
    'page callback' => 'gofast_link_sharing_multi_link_page',
    'page arguments' => array(2),
    'access callback' => TRUE,
  );
  
  $items['multi_sharing/logged_in/%'] = array(
    'title' => 'Share',
    'description' => 'Share a link to a file',
    'page callback' => 'gofast_link_sharing_multi_link_page',
    'page arguments' => array(2),
    'access arguments' => array('access content'),
    'access callback' => 'user_access',
  );

  return $items;
}

/**
 * Implements hook_theme()
 */
function gofast_link_sharing_theme(){
  $theme['gofast-link-sharing-body'] = array(
    'template' => 'tpl/gofast-link-sharing-body'
  );

  $theme['gofast-link-sharing-file-details'] = array(
    'template' => 'tpl/gofast-link-sharing-file-details'
  );

  $theme['gofast-link-sharing-multi-file-details'] = array(
    'template' => 'tpl/gofast-link-sharing-multi-file-details'
  );
  
  $theme['gofast-link-sharing-multi-folder-details'] = array(
    'template' => 'tpl/gofast-link-sharing-multi-folder-details'
  );

  $theme['gofast-sharing-download'] = array(
    'template' => 'tpl/gofast-sharing-download'
  );

  $theme['gofast_manage_linksharing_progression'] = array(
     'template'  => 'tpl/gofast-manage-linksharing'
  );

  $theme['gofast_manage_linksharing_body'] = array(
     'template'  => 'tpl/gofast-manage-linksharing-body'
  );
  
  $theme['gofast_link_sharing_share_folder_contents'] = array(
     'template'  => 'tpl/gofast-link-sharing-share-folder-contents'
  );  
  
  $theme['gofast_link_sharing_folder_body'] = array(
     'template'  => 'tpl/gofast-manage-linksharing-folder-body'
  );

  return $theme;
}

/**
 * @throws \Exception
 */
function gofast_link_sharing_multi_link_page($hash){
  if(!empty($hash)){
    
    $hash_code = $hash;
  } else {
    $hash_code = $_GET['hash'];
  }
  
  if(array_key_exists('workspace', $_GET)){
    $folder_store_id = $_GET['workspace'];

    $multi_link_form = drupal_get_form("gofast_multi_link_sharing_form", $hash_code, $folder_store_id);
    $data = ['form' => $multi_link_form, 'ask_join_link' => FALSE, 'hash' => $hash_code];
    $data['folder_store_id'] = $folder_store_id;
    $data['folder_contents'] = gofast_link_sharing_get_shared_folder_content($folder_store_id);
    
    $content = theme('gofast-link-sharing-multi-folder-details', $data);
    return gofast_create_page_content($content);
  }
  
  $multi_link_form = drupal_get_form("gofast_multi_link_sharing_form", $hash_code );
  $nids = array_keys($multi_link_form["shares"]["#options"]);
  $parents = array_unique(array_map(function($nid) {
    $node = node_load($nid);
    if ($node) {
      $og_parent = gofast_og_get_parent($node);
      $parent = reset($og_parent);
      $is_private = gofast_og_is_user_private_space($parent);
    }
    if ($node && !$is_private) {
      return $parent;
    }
  }, $nids));
  
  if (empty($parents))
    $ask_join_link = FALSE;
  else 
    $ask_join_link = "/modal/nojs/directory/bulk_action/space/ask_join/" . implode("-", $parents);
  
  $data = ['form' => $multi_link_form, 'ask_join_link' => $ask_join_link, 'hash' => $hash_code];
  $content = theme('gofast-link-sharing-multi-file-details', $data);
  return gofast_create_page_content($content);
}

function gofast_link_sharing_get_shared_folder_content($store_id): stdClass {

  $store_id= "workspace://SpacesStore/".$store_id;
  // this usurp is mandatory since gofast_cmis_get_repository will return null for anonymous users
  usurp(1);
  $item = gofast_cmis_item_get($store_id, TRUE);
  usurp(FALSE);
  
  $node_description  = gofast_link_sharing_get_folder_description($item);

  //convert properties to array
  if(gettype($item) != "boolean" && is_object($item)){
    $item->properties = (array) $item->properties;
    $node_description->title = $item->properties["cmis:name"] ?? $item->title;
  } else {
    $node_description->title = t('This folder could not be be found.',
      [], ['context' => 'gofast_link_sharing']);
  }
   
  $node_description->locations = [];

  return $node_description;
}

/**
 * Gets the content of a folder
 * @param mixed $item
 *
 * @return \stdClass
 */
function gofast_link_sharing_get_folder_description(mixed $item): stdClass {
  $node_description = new stdClass();
  $node_description->children = [];

  $node_description->icon = "fa fa-folder";
  $children = gofast_cmis_webservice_item_get_descendants($item->id);

  foreach ($children as $child) {
    $child_object = new stdClass();
    if (is_numeric($child)) {
      $child_node = node_load($child);
      $child_object->icon = gofast_node_get_icon($child_node);
      $child_object->title = $child_node->title;
    }
    else {
      $array = explode("/", $child);
      $child_object->title = array_pop($array);
      $child_object->icon = "fa fa-file";
    }
    $node_description->children[] = $child_object;
  }
  return $node_description;
}

/**
 * Page callback : Display a form to share a document
 *
 * This callback manage to open the form page inside a modal (if $js is set to 'ajax')
 * or in a former page.
 *
 * @param string $js
 * @param node $node
 *    The drupal node of the document that will be shared
 *
 * @return type
 */
function gofast_link_sharing_form_modal($js, $node=null){

  global $user;
  ctools_include('ajax');
  ctools_include('modal');

  if (!$js) {
    $arg = $node->nid ? '/' . $node->nid: '';
    return drupal_goto('linksharing' . $arg);
  }

  $form_state = array(
    'reset_html_ids' => TRUE,
    'build_info' => array(
      'args' => array(
        (object) $node,
      )
    ),
    'ajax' => TRUE,
    'title' => null
  );

  $commands = ctools_modal_form_wrapper('gofast_link_sharing_form', $form_state);
  if (!isset($commands[0])) {
    $form_state['input']['to'] = array_map(function($item) {
      $formatted_item = new stdClass();
      $formatted_item->type = $item->type;
      $formatted_item->value = $item->value;
      return $formatted_item;
    }, json_decode((string) $form_state['input']['ac-list-tags-to']));
    if (!empty($form_state['input']['to'])){
      $values_sharing[] = $form_state['input']['to'];
    }
    $commands = array();
    $commands[] = ctools_modal_command_dismiss();

    $commands = array_merge($commands, gofast_ajaxification_get_toast_messages());

    //Insert linksharing into audit
    gofast_audit_linksharing($node, $values_sharing);

    //Insert last event linksharing into news feed
    //gofast_message_ext_create_linksharing_entity($node,$values_sharing);



  }
  print ajax_render($commands);

  return;
}

/**
 * Page callback : Give access to the shared document from the shared url
 *
 * Form the shared link, it control that the document is accessible for the user
 * - check node exist
 * - check expiry date (only for anonymous)
 * - check user has permission to access the document, if so redirect to the node
 * page of the document directly
 *
 *
 * @return string (HTML)
 */
function gofast_link_sharing($hash){
  global $base_url;
  global $user;
  $curr_user = $user;
  $node = gofast_multi_sharing_check_session($hash);
  //Check if there is already a gofast session
  $is_gofast_user = gofast_link_sharing_is_gofast_user($curr_user);
    $user_has_access = gofast_link_sharing_usr_has_access($node, $curr_user);
    // this usurp is mandatory since gofast_cmis_get_repository will return null for anonymouse users
    usurp(1);
    $cmis_id = gofast_cmis_node_get_item_id($node);
    $object = gofast_cmis_item_get($cmis_id, TRUE);
    usurp(FALSE);

    if($is_gofast_user && $user_has_access){
    $ddl_link = $base_url.":443".'/node/'.$node->nid;
      header('Location:'.$ddl_link);
      exit;

    }else{
      $parent = reset(gofast_og_get_parent($node));
      $parent_name = gofast_get_node_title($parent);
      $is_private = gofast_og_is_user_private_space($parent);
      if ($is_private) {
        $parent = FALSE;
      }
      $output = theme('gofast-link-sharing-file-details', array(
                'title' => $object->properties['cmis:name'],
                'version' => empty($version) ? $object->properties['cmis:versionLabel']: $version,
                'hash' => $_GET['hash'],
                'parent' => $parent,
                'parent_name' => $parent_name,
		            'nid' => $node->nid,
              ));
  }

  return $output;
}

/**
 * Page callback : Send a mail to the forwarder when recipients download the link. Add a line on the audit
 *
 * Get hash of the url and decrypt it then:
 *  - Get all informations of the hash ( node id , sharing version ...)
 *  - Create the template of the mail
 *  - Send the mail
 *  - Add audit line
 *
 */
function gofast_sharing_download(){

    global $base_url;
    $decrypt_datas = gofast_link_sharing_link_decrypt($_GET['hash']);
    $nid = $decrypt_datas['nids'];
    $transmitter = user_load($decrypt_datas['transmitter']);
    $version = $decrypt_datas['version'];
    $dest_id = $decrypt_datas['dest_id'];
    if(!is_numeric($dest_id)){
      ## not a GoFAST user
      $mail = $decrypt_datas['dest_id'];
      $nameDestinaire = $decrypt_datas['dest_id'];
    }else{
      $destinataire = user_load($dest_id);
      $nameDestinaire = gofast_user_display_name($destinataire);
    }

    $version_share = $version;
    $node = node_load($nid);
    $nodes_informations[0]['title'] = $node->title;
    $node_icon = str_replace('<span>', '<span style="display:none;">', theme('node_title', array('node' => $node, 'link' => FALSE)));
    $nodes_informations[0]['icon'] =  gofast_mail_queue_fa_png($node_icon);
    $nodes_informations[0]['url'] = $base_url .'/node/' . $nid;
    $node_icon = str_replace('<span>', '<span style="display:none;">', theme('node_title', array('node' => $node, 'link' => FALSE)));
    $message_tag = '<a href="mailto:' . $mail . '" style="color: 3699ff; text-decoration: none;">' . $nameDestinaire. '</a>';
    $author_pic_url = gofast_get_url_picture_by_id($destinataire->uid);
    $author_pic = '<img src="' . $author_pic_url . '" style="padding-right: 5px; border-radius; 5px;" width="25">';

    $destination_user = user_load($destinataire->uid);
    $l = array('langcode' => $transmitter->language, 'context' => 'gofast:gofast_link_sharing');
    $body = theme('gofast-sharing-download', array(
      'message' => str_replace("{tag}", $message_tag, t("{tag} downloaded your document on the GoFAST platform", array(), array('context' => 'gofast:gofast_link_sharing'))),
      'author_pic' =>  $destination_user !== FALSE ? theme('user_picture', array('account' => user_load($destinataire->uid), 'dimensions' => 40, 'attributes' => ['width' => 40, 'style' => "border-radius: 5px; width:40px;"])): '', 'recip_name' => $transmitter->ldap_user_givenname[LANGUAGE_NONE][0]['value'],
      'nodes_informations' => $nodes_informations,
      'l' => $l,
    ));

    $subject = t("@destinaire downloaded your document on the GoFAST platform", array('@destinaire' => $nameDestinaire), array('langcode' => $transmitter->language, 'context' => 'sharing_dl'));
    $title = t("Sharing Download",array(),array('langcode' => $transmitter->language, 'context' => 'sharing_dl'));
    $footer = t('Message sent from ', array(), $l)." ".variable_get('site_name');
    $dest_mail=array();
    $dest_mail['0']['recpt'] = $transmitter->mail;
    $dest_mail['0']['method'] = 'to';

    $mail = array(
      'body' => $body,
      'title' => $title,
      'subject' => $subject,
      'footer' => $footer
    );
    $transmitter_id = $dest_id;
    gofast_mail_queue_api_queue_ext($mail,  $dest_mail, time(), $transmitter_id);

    //Insert sharing_dl into audit
    $addr_ip = $_SERVER["REMOTE_ADDR"];
    $event_type = "sharing_dl";
    $last_event_unserialized["mod_timestamp"] = time();
    $last_event_unserialized["mod_author"] = 0;
    $last_event_unserialized["mod_version"] = $version_share;
    $last_event_unserialized["mod_ip"] = $addr_ip;
    $event = array('mod_author' => 0, 'mod_timestamp' => time(), "event" => $event_type, 'mod_version' => $version_share, 'mod_ip' => $addr_ip);
    $event = serialize($event);
    $last_event_serialized = rawurlencode($event);
    gofast_audit_insert_line_audit($node->nid,$event_type,$last_event_serialized, $last_event_unserialized);

    try{
        global $user;
        usurp(1);
        $alfresco_ticket = gofast_cmis_webservice_generate_alfresco_ticket("admin");
        $title = $node->title;
        $version = str_replace('.','_',$node->field_current_version['und']['0']['value']);
        $extension = gofast_cmis_node_get_extension($node);
        $cmis_id = gofast_cmis_node_get_item_id($node);
        $object = gofast_cmis_item_get($cmis_id, TRUE);      
        $link = $object->links["edit-media"];
        $ddl_link = $link .'&alf_ticket='.$alfresco_ticket;
        str_replace('.','_',$node->field_current_version['und']['0']['value']);
        $full_title = str_replace('.' . $extension , '_v' . $version . '.' . $extension,$title);
        //Clear the user ticket
        gofast_cmis_unset_user_ticket();
        usurp(false);
        //Prepare buffer for stream
        while (ob_get_level()) ob_end_clean();
        set_time_limit(0);
        
        //Download the file
        header('Content-disposition: attachment; filename="'.$full_title . '"');
        header('Content-type: ' . $object->properties['cmis:contentStreamMimeType']);      
        readfile($ddl_link);
        # need to exit because other header overload both header
        exit;
    }catch(Exception $e){
        gofast_cmis_unset_user_ticket();
    }

}

/**
 * Delivery callback : Customize display of the 'public/sharing' page
 *
 * @param mixed $page_callback_result
 */
function gofast_link_sharing_delivery_callback($page_callback_result){

  usurp(FALSE);
  global $user;

  //Destroy session cleanly
  if (drupal_session_started() && ! gofast_link_sharing_is_gofast_user($user)) {
      session_destroy();
  }

   if($user == null){
      $user = user_load(0);
  }

  print drupal_render_page($page_callback_result);
}

/**
 * Function to change the timestamp of a node (specially for linksharing)
 * @param type $nid
 * @param type $timestamp
 */
function gofast_link_sharing_change_timestamp($nid,$timestamp){

    db_query("UPDATE node SET changed='". $timestamp ."' where nid='" . $nid . "';");

}
